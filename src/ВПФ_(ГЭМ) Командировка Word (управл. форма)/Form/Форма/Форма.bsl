&НаКлиенте
Процедура КомандаПечать(Команда)
	Массив = Новый Массив;
	Массив.Добавить(Объект.СсылкаНаОбъект);
	//СформироватьМакетНаСервере(Массив);
	Печать(, Массив);
КонецПроцедуры

&НаСервере                 
//Тип макета - двоичные данные
Функция ПолучитьМакетНаСервере()
	//ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	//ОбъектОбработка.ПечатьМакета(Массив, ОбъектОбработка.ПолучитьМакет("Макет"));
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");
КонецФункции

Процедура Печать(ИдентификаторКоманды = Неопределено, МассивОбъектов)
	ДанныеДляПечати = ДанныеДляПечатиКомандировки(МассивОбъектов).Выбрать();
	//ПервыйДокумент = Истина;
	Пока ДанныеДляПечати.СледующийПоЗначениюПоля("Ссылка") Цикл
		Попытка
			Word = Новый COMОбъект("Word.Application"); 
			Макет = ПолучитьМакетНаСервере();
			временныйПуть = КаталогВременныхФайлов();
			имяВременногоФайла = временныйПуть + "gph.doc";
			Макет.Записать(имяВременногоФайла);
			ТекДок = Word.Documents.ADD(имяВременногоФайла);
			
			Замена = ТекДок.Content.Find;
			
			Замена.Execute("[НазваниеОрганизации]", , , , , , , , , ДанныеДляПечати.Организация.Наименование, 2);
			Замена.Execute("[КодПоОКПО]", , , , , , , , , "52916808", 2);
			Замена.Execute("[НомерДок]", , , , , , , , , ДанныеДляПечати.НомерДокумента, 2);
			Замена.Execute("[ДатаДок]", , , , , , , , , Формат(ДанныеДляПечати.ДатаДокумента, "ДФ=dd.MM.yyyy"), 2);
			Замена.Execute("[Работник]", , , , , , , , , ДанныеДляПечати.ФИОПолные, 2);
			Замена.Execute("[ТабельныйНомер]", , , , , , , , , ДанныеДляПечати.ТабельныйНомер, 2);
			Замена.Execute("[ПодразделениеРаботника]", , , , , , , , , ДанныеДляПечати.Подразделение.Наименование, 2);
			Замена.Execute("[Должность]", , , , , , , , , ДанныеДляПечати.Должность.Наименование, 2);
			
			
			//Тарифный разряд в спр-ке "Должности" не заполняется, нужно выбрать из  РегистраСведений.РазрядыКатегорииСотрудников
			РазрядКатегория = ПолучитьРазрядКатегорию(ДанныеДляПечати.Сотрудник, ДанныеДляПечати.ДатаНачала);
			Замена.Execute("[ТарифныйРазряд]", , , , , , , , , РазрядКатегория, 2);
			Замена.Execute("[СтранаНазначения]", , , , , , , , , ДанныеДляПечати.МестоНазначения, 2);
			Замена.Execute("[ОрганизацияНазначения]", , , , , , , , , ДанныеДляПечати.ОрганизацияНазначения, 2);
			Замена.Execute("[Цель]", , , , , , , , , ДанныеДляПечати.Цель, 2);
			Замена.Execute("[Продолжительность]", , , , , , , , , ДанныеДляПечати.Продолжительность, 2);
			Замена.Execute("[ДатаНачала1]", , , , , , , , , Формат(ДанныеДляПечати.ДатаНачала, "ДФ=dd.MM.yyyy"), 2);
			
			Замена.Execute("[РеквизитыПаспорта]", , , , , , , , , ДанныеДляПечати.ДокументПредставление, 2);
			
			Замена.Execute("[ДолжностьРуководителя]", , , , , , , , , ДанныеДляПечати.ДолжностьРуководителя.Наименование, 2);
			Замена.Execute("[ФИОРуководителя]", , , , , , , , , ДанныеДляПечати.РуководительРасшифровкаПодписи, 2);
			Замена.Execute("[ДеньНачало]", , , , , , , , , День(ДанныеДляПечати.ДатаНачала), 2);
			Замена.Execute("[МесяцНачало]", , , , , , , , , Месяц(ДанныеДляПечати.ДатаНачала), 2);
			Замена.Execute("[ГодНачало]", , , , , , , , , Год(ДанныеДляПечати.ДатаНачала), 2);
			
			ДанныеРуководителяКадровойСлужбы = ПолучитьДанныеРуководителяКадровойСлужбы(ДанныеДляПечати.Организация, ДанныеДляПечати.ДатаНачала);
			Если ДанныеРуководителяКадровойСлужбы <> Неопределено Тогда
				Замена.Execute("[ДолжностьКадровика]", , , , , , , , , ДанныеРуководителяКадровойСлужбы.ДолжностьРуководителяКадровойСлужбы.ПолучитьОбъект().Наименование, 2);
				Замена.Execute("[РасшифровкаКадровика]", , , , , , , , , ДанныеРуководителяКадровойСлужбы.РуководительКадровойСлужбы.ПолучитьОбъект().Наименование, 2);	
			КонецЕсли; 
			
			//Еще одна дата начала, помимо "ДатаНачала1"
			Замена.Execute("[ДатаНачала]", , , , , , , , , Формат(ДанныеДляПечати.ДатаНачала, "ДФ=dd.MM.yyyy"), 2);
			Замена.Execute("[ДатаОкончания]", , , , , , , , , Формат(ДанныеДляПечати.ДатаОкончания, "ДФ=dd.MM.yyyy"), 2);
			Замена.Execute("[ПродолжительностьЧистая]", , , , , , , , , ДанныеДляПечати.ПродолжительностьЧистая, 2);
			Замена.Execute("[ИсточникФинансирования]", , , , , , , , , ДанныеДляПечати.КомандировкаЗаСчетСредств, 2);
			Замена.Execute("[ОснованиеКомандировки]", , , , , , , , , ДанныеДляПечати.Основание, 2);
			Замена.Execute("[]", , , , , , , , , ДанныеДляПечати.НомерДокумента, 2);
			Замена.Execute("[]", , , , , , , , , ДанныеДляПечати.НомерДокумента, 2);
			Замена.Execute("[]", , , , , , , , , ДанныеДляПечати.НомерДокумента, 2);
			Замена.Execute("[]", , , , , , , , , ДанныеДляПечати.НомерДокумента, 2);
			Замена.Execute("[]", , , , , , , , , ДанныеДляПечати.НомерДокумента, 2);
			
			
			Word.Visible = Истина;
		Исключение
			Сообщить(ОписаниеОшибки());
			Word.Quit();
		КонецПопытки;
КонецЦикла;
КонецПроцедуры

#Область Командировка
Функция ПолучитьРазрядКатегорию(Сотрудник, ДатаСреза)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РазрядыКатегорииСотрудниковСрезПоследних.РазрядКатегория КАК РазрядКатегория
		|ИЗ
		|	РегистрСведений.РазрядыКатегорииСотрудников.СрезПоследних(&ДатаСреза, Сотрудник = &Сотрудник) КАК РазрядыКатегорииСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.РазрядКатегория.Наименование;	
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
    Возврат "";
КонецФункции // ПолучитьРазрядКатегорию()
 
Функция ПолучитьДанныеРуководителяКадровойСлужбы(Организация, ДатаСреза)
	Запрос = Новый Запрос;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицахСрезПоследних.РуководительКадровойСлужбы КАК РуководительКадровойСлужбы,
		|	СведенияОбОтветственныхЛицахСрезПоследних.ДолжностьРуководителяКадровойСлужбы КАК ДолжностьРуководителяКадровойСлужбы
		|ИЗ
		|	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК СведенияОбОтветственныхЛицахСрезПоследних";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи;	
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Неопределено;
КонецФункции	

//Скопировали неэкспортную функцию из Обработки.ПечатьКадровыхПриказовРасширенная
Функция ДанныеДляПечатиКомандировки(МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Командировка.Ссылка КАК Ссылка,
	|	Командировка.Сотрудник КАК Сотрудник,
	|	Командировка.Организация КАК Организация,
	|	Командировка.Дата КАК Дата,
	|	Командировка.Дата КАК ДатаДокумента,
	|	Командировка.Номер КАК НомерДокумента,
	|	ВЫБОР
	|		КОГДА Организации.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА Организации.Наименование
	|		ИНАЧЕ Организации.НаименованиеПолное
	|	КОНЕЦ КАК НазваниеОрганизации,
	|	Организации.КодПоОКПО КАК КодПоОКПО,
	|	Командировка.ДатаНачала КАК ДатаНачала,
	|	Командировка.ДатаНачала КАК Период,
	|	Командировка.ДатаОкончания КАК ДатаОкончания,
	|	Командировка.МестоНазначения КАК МестоНазначения,
	|	Командировка.ОрганизацияНазначения КАК ОрганизацияНазначения,
	|	Командировка.Основание КАК Основание,
	|	Командировка.Цель КАК Цель,
	|	Командировка.ДнейВПути КАК ДнейВПути,
	|	Командировка.Руководитель КАК Руководитель,
	|	Командировка.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	Командировка.КомандировкаЗаСчетСредств КАК КомандировкаЗаСчетСредств
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.Командировка КАК Командировка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО Командировка.Организация = Организации.Ссылка
	|ГДЕ
	|	Командировка.Ссылка В(&МассивОбъектов)";
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Руководитель"), "ВТДанныеДокумента");
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц,
		"ВТДанныеДокумента");
		
	//|	ЕСТЬNULL(ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид.Наименование + "", серия "" + ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия + "", №"" + ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер, """") КАК РеквизитыПаспорта,
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "ФИОПолные,Подразделение,Должность,ТабельныйНомер,ДокументПредставление,Пол");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Командировка.Ссылка КАК Ссылка,
	|	Командировка.ДатаДокумента КАК ДатаДокумента,
	|	Командировка.НомерДокумента КАК НомерДокумента,
	|	Командировка.Сотрудник КАК Сотрудник,
	|	Командировка.Организация КАК Организация,
	|	Командировка.НазваниеОрганизации КАК НазваниеОрганизации,
	|	Командировка.КодПоОКПО КАК КодПоОКПО,
	|	Командировка.ДатаНачала КАК ДатаНачала,
	|	Командировка.ДатаОкончания КАК ДатаОкончания,
	|	Командировка.МестоНазначения КАК МестоНазначения,
	
	
	|ВЫБОР 
	|		КОГДА ( (РАЗНОСТЬДАТ(Командировка.ДатаНачала, Командировка.ДатаОкончания, ДЕНЬ) + 1) > 0 ) ТОГДА РАЗНОСТЬДАТ(Командировка.ДатаНачала, Командировка.ДатаОкончания, ДЕНЬ) + 1
	|		ИНАЧЕ """" 
	|КОНЕЦ КАК Продолжительность,
	//РАЗНОСТЬДАТ(Командировка.ДатаНачала, Командировка.ДатаОкончания, ДЕНЬ) + 1 КАК Продолжительность,
	|ВЫБОР 
	|		КОГДА ( (РАЗНОСТЬДАТ(Командировка.ДатаНачала, Командировка.ДатаОкончания, ДЕНЬ) + 1 - Командировка.ДнейВПути) > 0 ) ТОГДА РАЗНОСТЬДАТ(Командировка.ДатаНачала, Командировка.ДатаОкончания, ДЕНЬ) + 1 - Командировка.ДнейВПути
	|		ИНАЧЕ """" 
	|КОНЕЦ КАК ПродолжительностьЧистая,
	//|	РАЗНОСТЬДАТ(Командировка.ДатаНачала, Командировка.ДатаОкончания, ДЕНЬ) + 1 - Командировка.ДнейВПути КАК ПродолжительностьЧистая,
	|	Командировка.ОрганизацияНазначения КАК ОрганизацияНазначения,
	|	Командировка.Основание КАК Основание,
	|	Командировка.КомандировкаЗаСчетСредств КАК КомандировкаЗаСчетСредств,
	|	Командировка.Цель КАК Цель,
	|	КадровыеДанныеСотрудников.ФИОПолные КАК ФИОПолные,
	|	КадровыеДанныеСотрудников.ДокументПредставление КАК ДокументПредставление,
	|	КадровыеДанныеСотрудников.Подразделение КАК Подразделение,
	|	КадровыеДанныеСотрудников.Должность КАК Должность,
	|	КадровыеДанныеСотрудников.ТабельныйНомер КАК ТабельныйНомер,
	|	КадровыеДанныеСотрудников.Пол КАК Пол,
	|	Командировка.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	ФИООтветственныхЛиц.РасшифровкаПодписи КАК РуководительРасшифровкаПодписи
	|ИЗ
	|	ВТДанныеДокумента КАК Командировка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
	|		ПО Командировка.Ссылка = ФИООтветственныхЛиц.Ссылка
	|			И Командировка.Руководитель = ФИООтветственныхЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО Командировка.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
	|			И Командировка.Период = КадровыеДанныеСотрудников.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Командировка.Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

